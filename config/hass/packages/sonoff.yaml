switch:
  - platform: mqtt
    name: "Sonoff: Bathroom"
    availability_topic: "tele/bathroom_mirror_light/LWT"
    state_topic: "stat/bathroom_mirror_light/POWER"
    command_topic: "cmnd/bathroom_mirror_light/POWER"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    retain: false

  - platform: mqtt
    name: "Sonoff: Fan"
    availability_topic: "tele/fan/LWT"
    state_topic: "stat/fan/POWER"
    command_topic: "cmnd/fan/POWER"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    retain: false

  - platform: mqtt
    name: "Sonoff: Kitchen Hood"
    availability_topic: "tele/kitchen_hood/LWT"
    state_topic: "stat/kitchen_hood/POWER"
    command_topic: "cmnd/kitchen_hood/POWER"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    retain: false

  - platform: mqtt
    name: "Sonoff: Shoe Cabinet"
    availability_topic: "tele/shoe_cabinet/LWT"
    state_topic: "stat/shoe_cabinet/POWER"
    command_topic: "cmnd/shoe_cabinet/POWER"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    retain: false

  - platform: mqtt
    name: "Sonoff POW: Extension cord"
    availability_topic: "tele/sonoff-pow/LWT"
    state_topic: "stat/sonoff-pow/POWER"
    command_topic: "cmnd/sonoff-pow/POWER"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    retain: false


binary_sensor:
  - platform: ping
    name: sonoff_bathroom
    host: sonoff-bathrom-mirror.lan
    count: 2
    scan_interval: 15


sensor:
  - platform: mqtt
    name: Sonoff POW Power
    state_topic: tele/sonoff-pow/SENSOR
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    availability_topic: "tele/sonoff-pow/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    unit_of_measurement: 'W'


light:
  - platform: template
    lights:
      bathroom_mirror:
        friendly_name: "Bathroom Mirror Light"
        value_template: >
          {% if is_state('binary_sensor.sonoff_bathroom', 'off') %}
            off
          {% else %}
            {{ states('switch.sonoff_bathroom') }}
          {% endif %}
        turn_on:
          service: switch.turn_on
          entity_id: switch.sonoff_bathroom
        turn_off:
          service: switch.turn_off
          entity_id: switch.sonoff_bathroom


automation:
  - alias: Sync state
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "cmnd/sonoffs/power1"
          payload: ""

  - alias: Sync state of bathroom mirror light with bathroom light (ON)
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.bathroom_light
        to: 'on'
    action:
      service: light.turn_on
      entity_id: light.bathroom_mirror

  - alias: Sync state of bathroom mirror light with bathroom light (OFF)
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.bathroom_light
        to: 'off'
    action:
      service: light.turn_off
      entity_id: light.bathroom_mirror

  - alias: Turn kitchen hood back on after 1 minute to avoid service interruption
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.sonoff_kitchen_hood
        to: 'off'
        for:
          minutes: 1
    action:
      service: switch.turn_on
      entity_id: switch.sonoff_kitchen_hood


homeassistant:
  customize:
    switch.sonoff_fan:
      icon: mdi:fan
    switch.sonoff_kitchen_hood:
      icon: mdi:weather-windy

# vim: set filetype=yaml et sw=2 ts=2 :
